# appimage-builder recipe see https://appimage-builder.readthedocs.io for details
version: 1
script:
  # Remove any previous build
  - rm -rf AppDir  | true
  - mkdir -p AppDir/usr
  # Install python3.9
  - docker run --rm --user "$(id -u):$(id -g)" --volume "$(pwd)/AppDir/usr/":/opt/out giacomofurlan/python-precompiled:v3.9 /opt/out/
  - ln -sr AppDir/usr/bin/python3 AppDir/usr/bin/python
  # Make usr and icons dirs
  - mkdir -p AppDir/usr/src
  - mkdir -p AppDir/usr/share/icons/hicolor/scalable/apps
  # Copy the python application code into the AppDir
  - cp ../main.py ../ui ../lib  AppDir/usr/src -r
  # Add the application's icon
  - cp ../ui/icons/Arch_AWS-Glue_64.svg AppDir/usr/share/icons/hicolor/scalable/apps/awsgluemanager.svg
  # Generate the requirements.txt file
  - export PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages"
  - PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages" AppDir/usr/bin/python3.9 -m pip install --upgrade pip
  - PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages" AppDir/usr/bin/python3.9 -m pip install pipenv
  - PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages" AppDir/usr/bin/python3.9 -m pipenv lock -r > requirements.txt
  # Install application dependencies in AppDir
  - PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages" AppDir/usr/bin/python3.9 -m pip install --upgrade --isolated --no-input --ignore-installed --prefix=./AppDir/usr wheel
  - PYTHONPATH="$(pwd)/AppDir/usr/lib64/python3.9/site-packages" AppDir/usr/bin/python3.9 -m pip install --upgrade --isolated --no-input --ignore-installed --prefix=./AppDir/usr -r ./requirements.txt
  # Fix non-debian-based libc ld library path (for tests)
  - mkdir -p AppDir/opt/libc/lib64
  - mkdir -p AppDir/opt/libc/usr/lib64
  - touch AppDir/opt/libc/usr/lib64/ld-linux-x86-64.so.2
  - ln -sr AppDir/opt/libc/usr/lib64/ld-linux-x86-64.so.2 AppDir/opt/libc/lib64/ld-linux-x86-64.so.2
  - rm AppDir/opt/libc/usr/lib64/ld-linux-x86-64.so.2

AppDir:
  path: ./AppDir

  app_info:
    id: name.giacomofurlan.AWSGlueManager
    name: AWSGlueManager
    icon: awsgluemanager
    version: latest
    # Set the python executable as entry point
    exec: usr/bin/python3.9
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/src/main.py $@"

  runtime:
    env:
      # APPDIR_LIBRARY_PATH: $APPDIR/lib
      # APPDIR_LIBRARY_PATH: $APPDIR/lib/x86_64-linux-gnu
      PATH: '${APPDIR}/usr/bin:${PATH}'
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/lib64/python3.9/site-packages'

  files:
    include:
      - /usr/bin/env

      # Debian based
      - /bin/bash
      - /bin/sh

      - /lib/x86_64-linux-gnu/libdl.so.2
      - /lib/x86_64-linux-gnu/libz.so.1
      - /lib/x86_64-linux-gnu/libc.so.6
      # Fedora based
      - /usr/bin/bash
      - /usr/bin/sh

      - /usr/lib64/libdl.so.2
      - /usr/lib64/libz.so.1
      - /usr/lib64/libc.so.6

      - /usr/lib64/ld-linux-x86-64.so.2
      - /usr/lib64/libcrypt.so.1
      - /usr/lib64/libxcb-icccm.so.4
      - /usr/lib64/libxcb-image.so.0
      - /usr/lib64/libxcb-keysyms.so.1
      - /usr/lib64/libxcb-render-util.so.0
      - /usr/lib64/libxkbcommon-x11.so.0
      - /usr/lib64/libpthread.so.0
      - /usr/lib64/libGL.so.1.7.0
    exclude:
    - usr/share/man
    - usr/share/doc/*/README.*
    - usr/share/doc/*/changelog.*
    - usr/share/doc/*/NEWS.*
    - usr/share/doc/*/TODO.*

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-33
      command: ./AppRun
      use_host_x: true
      # env:
      #   QT_DEBUG_PLUGINS: 1
      #   LD_DEBUG: libs

    debian:
      image: debian:buster-slim
      command: ./AppRun
      use_host_x: true
      env:
        QT_DEBUG_PLUGINS: 1
        LD_DEBUG: libs
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun
      use_host_x: true
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun
      use_host_x: true
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: true
AppImage:
  arch: x86_64
  update-information: guess
  sign-key: None
